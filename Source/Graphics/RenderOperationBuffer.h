/*
-----------------------------------------------------------------------------
This source file is part of Apoc3D Engine

Copyright (c) 2009+ Tao Games

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  if not, write to the Free Software Foundation, 
Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA, or go to
http://www.gnu.org/copyleft/gpl.txt.

-----------------------------------------------------------------------------
*/

#pragma once

#include "..\Common.h"
#include <vector>

namespace Apoc3D
{
	namespace Graphics
	{
		typedef std::vector<RenderOperation> OpList;
		/*
		  A buffer to store list of RenderOperation.
		  RenderOperation generated by Renderable objects 
		  should be add into this buffer before passing to the rendering engine.
		*/
		class _Export RenderOperationBuffer
		{
		private:
			OpList m_oplist;
			int m_internalPointer;
		public:
			RenderOperationBuffer(void)
			{

			}
			~RenderOperationBuffer(void)
			{

			}
			/* Adds a new RenderOperation to the buffer
			*/
			void RenderOperationBuffer::Add(const RenderOperation& op);
			/* Adds some new RenderOperation to the buffer
			*/
			void RenderOperationBuffer::Add(const RenderOperation* op, int count);
			void Clear();
			
			void FastClear()
			{
				m_internalPointer = 0;
			}
			const RenderOperation& get(int i)
			{
				return m_oplist[i];
			}

			int getCount(){ return m_internalPointer; }
		};

	}
}